from time import time
import telebot
import xlrd
import random
from telebot.types import KeyboardButton, Message, ReplyKeyboardMarkup
import datetime

#–ë–æ—Ç
key = open('key')
bot = telebot.TeleBot(key.read())
book = xlrd.open_workbook_xls('raspisanie.xls')
sheettime = book.sheet_by_index(3)
sheetanekdot = book.sheet_by_index(4)
key.close()

global_group_type = ''

#–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
#–ø–µ—Ä–≤—ã–π –≤—ã–±–æ—Ä
button_texnik = KeyboardButton('–¢–µ—Ö–Ω–∏–∫')
button_universal = KeyboardButton('–£–Ω–∏–≤–µ—Ä—Å–∞–ª')
button_estev = KeyboardButton('–ï—Å—Ç–µ—Å–≤–µ–Ω–Ω–æ-–Ω–∞—É—á–Ω–∏–∫')
choose = ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True).add(button_texnik,button_universal,button_estev)

#–º–µ–Ω—é
button_choosegroup = KeyboardButton('–ü–æ–º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É')
button_raspisanie = KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
button_danek = KeyboardButton('–ê–Ω–µ–∫–¥–æ—Ç')
button_aboutus = KeyboardButton('–û –Ω–∞—Å')
menu = ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True).add(button_choosegroup).add(button_raspisanie).add(button_danek,button_aboutus)


def mainraspisanie(group_type, today):
    raspisanie = str(today.time())
    group = book.sheet_by_index(group_type)
    days = ['  –ü–ù\n','  –í–¢\n','  –°–†\n','  –ß–¢–í\n','  –ü–¢–ù\n']
    if group_type == 0:
        raspisanie += '  –¢–ï–•'
    elif group_type == 1:
        raspisanie += '  –£–ù'
    else:
        raspisanie += '  –ï/–ù'

    if today.time() < datetime.time(15,15,0): # –ï—Å–ª–∏ –¥–µ–Ω—å —É–∂–µ –ø—Ä–æ—à—ë–ª
        weekday = today.weekday()
    else:
        weekday = today.weekday() + 1

    if (weekday == 6) or (weekday == 5): # –ï—Å–ª–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ
        weekday = 0

    raspisanie += str(days[weekday])

    for i in range(1,7):
        raspisanie += str(group.cell_value(weekday, i))
        starttime = datetime.time(*xlrd.xldate_as_tuple(sheettime.cell_value(0,i), book.datemode)[3:])
        finishtime = datetime.time(*xlrd.xldate_as_tuple(sheettime.cell_value(1,i), book.datemode)[3:])
        try:
            peremenatime = datetime.time(*xlrd.xldate_as_tuple(sheettime.cell_value(0,i+1), book.datemode)[3:])
            if starttime < today.time() < finishtime:
                raspisanie += ' <-- –í—ã –∑–¥–µ—Å—å'
            elif finishtime < today.time() < peremenatime:
                raspisanie += ' <-- –ü–µ—Ä–µ–º–µ–Ω–∞'
        except IndexError:
            print('–æ–∫')

        raspisanie += '\n'

    return raspisanie

def getanekdot():
    rand = random.randrange(0,9)
    anekdot = sheetanekdot.cell_value(rand, 0)
    return anekdot

@bot.message_handler(commands=['start', 'help'])
def start_message(Message):
    bot.send_message(Message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ c —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º! \n–°–Ω–∞—á–∞–ª–∞ –±—É–¥—å—Ç–µ –¥–æ–±—Ä—ã —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –≥—Ä—É–ø–ø—É.', reply_markup=menu)

@bot.message_handler(content_types=['text'])
def menuchoose(Message):
    text = Message.text
    date = datetime.datetime.fromtimestamp(Message.date)
    global global_group_type 

    if text =='–ü–æ–º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É':
        bot.send_message(Message.chat.id, '–í—ã–±–∏—Ä–∞–π.',reply_markup=choose)

    elif text =='–¢–µ—Ö–Ω–∏–∫':
        global_group_type = 0
        bot.send_message(Message.chat.id, '–í–∞—É... ü•µ',reply_markup=menu)

    elif text == '–£–Ω–∏–≤–µ—Ä—Å–∞–ª':
        global_group_type = 1
        bot.send_message(Message.chat.id, '–Ø—Å–Ω–æ... ü§¢',reply_markup=menu)

    elif text == '–ï—Å—Ç–µ—Å–≤–µ–Ω–Ω–æ-–Ω–∞—É—á–Ω–∏–∫':
        global_group_type = 2
        bot.send_message(Message.chat.id, '–Ø—Å–Ω–æ... ü§Æ',reply_markup=menu)

    elif text == '–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        if type(global_group_type) == int:
            answer = mainraspisanie(global_group_type,date)
            bot.send_message(Message.chat.id, answer, reply_markup=menu)

        else:
            bot.send_message(Message.chat.id, '–≥—Ä—É–ø–ø—É —Ç–æ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏!!!', reply_markup=choose)

    elif text == '–ê–Ω–µ–∫–¥–æ—Ç':
        bot.send_message(Message.chat.id, getanekdot(), reply_markup=menu)

    elif text == '–û –Ω–∞—Å':
        bot.send_message(Message.chat.id, '–ò–¥–µ–π–Ω—ã–π –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å: –í–∏—Ç–∞–ª—è \n–†–µ–∞–ª–∏–∑–∞—Ü–∏—è: –†—É—Å–ª–∞–Ω\n –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –≤—Å–µ–º –∑–∞ –∏–¥–µ–∏ –∏ —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–æ–≤–∞–Ω–∏—è ‚ù§Ô∏è \n–ï—Å–ª–∏ –µ—Å—Ç—å –∏–¥–µ–∏ –∏–ª–∏ –¥–∞–∂–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. \n–ü—Ä–æ—à—É –ø–∏—Å–∞—Ç—å –º–Ω–µ –ª–∏—á–Ω–æ –∏–ª–∏ –≤—ã–ª–æ–∂–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≥–∏—Ç—Ö–∞–±: https://github.com/Landesh/botustelegramus', reply_markup=menu)

    else:
        bot.send_message(Message.chat.id, '–Ω–∏—Ö—É—è –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ', reply_markup=menu)

    if datetime.datetime.fromtimestamp(Message.date) != date:
        bot.edit_message_text(Message.chat.id, '–•–ê–•–ê –ò–ó–ú–ï–ù–ò–õ')


bot.polling(none_stop = True)
